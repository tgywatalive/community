<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcoder.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <!--所有的最近消息（包括已读未读）-->
    <select id="selectConversations" resultType="Message">
        select <include refid="selectFields"/>
        from message
        where id in (
            SELECT MAX(`id`) FROM message
            WHERE `status` != 2
            AND `from_id` != 1
            AND (from_id = #{userId} or to_id = #{userId})
            GROUP BY `conversation_id`
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <!--查询最近消息数量-->
    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from (
            SELECT MAX(`id`) as maxid FROM message
            WHERE `status` != 2
            AND `from_id` != 1
            AND (from_id = #{userId} or to_id = #{userId})
            GROUP BY `conversation_id`
        ) as m
    </select>

    <!--查询某一私信-->
    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"/>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <!--查询某一私信的数量-->
    <select id="selectLetterCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <!--未读消息数 可以用于单个和总的-->
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id) from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <!--新增消息-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"/>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <!--修改消息状态-->
    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>
